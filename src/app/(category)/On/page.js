import Header from '@/app/components/Header'
export default function On() {
  return (
    <>
      <Header />
      <div className="flex justify-center  h-screen bg-gray-100">
        <div className="bg-white shadow-md p-6 rounded-lg">
          <p className="text-gray-700">
            Велике O (O-велике) - це математична нотація, яку використовують у
            інформатиці для оцінки асимптотичної (найшвидшої) складності
            алгоритмів. Вона допомагає визначити, наскільки швидко час виконання
            або використання ресурсів алгоритму зростає зі збільшенням розміру
            вхідних даних.
          </p>
          <br></br>
          <p className="text-gray-700">
            (константний час) O(1) - це позначення в аналізі алгоритмів, яке
            вказує на постійний час виконання або постійну складність. Це
            означає, що час виконання алгоритму або операції не залежить від
            розміру вхідних даних і залишається постійним.
          </p>
          <br></br>
          <p className="text-gray-700">
            (лінійний) O(n) - це позначення в аналізі алгоритмів, яке вказує на
            лінійну складність. Це означає, що час виконання алгоритму або
            операції лінійно залежить від розміру вхідних даних: чим більше
            даних, тим більше часу потрібно для виконання.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(n^2) - це позначення в аналізі алгоритмів, яке вказує на
            квадратичну складність. Це означає, що час виконання алгоритму або
            операції пропорційний квадрату розміру вхідних даних. При збільшенні
            розміру даних удвічі, час виконання може збільшуватися в чотири
            рази.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(n * m) - це позначення в аналізі алгоритмів, яке вказує на
            складність, пропорційну добутку розмірів двох незалежних параметрів
            n і m. Це означає, що час виконання алгоритму або операції залежить
            від добутку розмірів вхідних даних n і m.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(n^3) - це позначення в аналізі алгоритмів, яке вказує на кубічну
            складність. Це означає, що час виконання алгоритму або операції
            пропорційний кубу розміру вхідних даних n. При збільшенні розміру
            даних удвічі, час виконання може збільшуватися в вісім разів.
          </p>
          <br></br>
          <p className="text-gray-700">
            (бінарний пошук) O(log n) - це позначення в аналізі алгоритмів, яке
            вказує на логарифмічну складність. Це означає, що час виконання
            алгоритму або операції зростає логарифмічно зі збільшенням розміру
            вхідних даних n. Чим більше n, тим повільніше зростає час виконання,
            що робить такі алгоритми ефективними для великих обсягів даних.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(n log n) - це позначення в аналізі алгоритмів, яке вказує на
            середню складність, яка поєднує лінійний і логарифмічний час. Це
            часто пов&#39;язано з алгоритмами сортування, такими як швидке
            сортування (quicksort) і сортування злиттям (merge sort), які мають
            таку асимптотичну складність при сортуванні даних.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(2^n) - це позначення в аналізі алгоритмів, яке вказує на
            експоненціальну складність. Це означає, що час виконання алгоритму
            зростає в експоненціальному порядку зі збільшенням розміру вхідних
            даних n. Алгоритми з такою складністю можуть стати дуже повільними
            при збільшенні обсягу даних і, як правило, не є ефективними для
            великих наборів даних.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(sqrt(n)) - це позначення в аналізі алгоритмів, яке вказує на
            складність, пропорціональну квадратному кореню від розміру вхідних
            даних n. Це означає, що час виконання алгоритму зростає повільно зі
            збільшенням розміру даних і є близьким до лінійного часу, але з
            більш помірним зростанням.
          </p>
          <br></br>
          <p className="text-gray-700">
            O(n!) - це позначення в аналізі алгоритмів, яке вказує на
            факторіальну складність. Це означає, що час виконання алгоритму
            зростає з факторіальною залежністю від розміру вхідних даних n.
            Факторіальна складність є однією з найповільніших і неефективних, і
            такі алгоритми стають практично несхожими при збільшенні розміру
            даних.
          </p>
          <br></br>
        </div>
      </div>
    </>
  )
}
