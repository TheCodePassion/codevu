import Header from '@/app/components/Header'
export default function OOP() {
  return (
    <>
      <Header />
      <div className="flex justify-center  h-screen bg-gray-100">
        <div className="bg-white shadow-md p-6 rounded-lg">
          <p className="text-gray-700">
            Інкапсуляція - Інкапсуляція в об&#39;єктно-орієнтованому
            програмуванні (ООП) - це принцип, який об&#39;єднує дані (змінні) і
            методи (функції), які працюють з цими даними, в один об&#39;єкт. Це
            надає засоби обмежувати доступ до внутрішнього стану об&#39;єкта і
            контролювати його використання ззовні. Ідея інкапсуляції полягає в
            тому, щоб приховати внутрішню реалізацію об&#39;єкта від зовнішнього
            світу і надавати лише необхідний інтерфейс для взаємодії з
            об&#39;єктом. В результаті зміна внутрішньої реалізації об&#39;єкта
            не повинна впливати на код, який використовує цей об&#39;єкт.
            Інкапсуляція досягається за допомогою модифікаторів доступу, таких
            як public, private і protected, які визначають рівень доступу до
            членів класу (змінних і методів). Наприклад, приватні змінні можуть
            бути доступні лише в межах самого класу, тоді як публічні методи
            можуть бути викликані ззовні об&#39;єкта.
          </p>
          <br></br>
          <p className="text-gray-700">
            Поліморфізм в об&#39;єктно-орієнтованому програмуванні (ООП) - це
            здатність об&#39;єктів різних класів мати однаковий інтерфейс і
            вести себе по-різному в залежності від їх типу. Це дозволяє
            використовувати загальний інтерфейс для роботи з різними типами
            об&#39;єктів, незалежно від їх конкретної реалізації. У більш
            стислій формі: Поліморфізм - це здатність об&#39;єктів різних типів
            реагувати на однакові виклики методів, але вести себе по-різному
            залежно від своєї власної реалізації.
          </p>
          <br></br>
          <p className="text-gray-700">
            Наслідування в об&#39;єктно-орієнтованому програмуванні (ООП) - це
            механізм, який дозволяє класу успадковувати властивості і методи
            іншого класу, який називається базовим класом або суперкласом. В
            результаті підклас успадковує всі характеристики базового класу і
            може додавати свої власні. Це дозволяє створювати ієрархії класів і
            сприяє повторному використанню коду, покращує модульність і
            гнучкість програми.
          </p>
          <br></br>
        </div>
      </div>
    </>
  )
}
